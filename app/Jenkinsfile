pipeline {
    agent any

    tools {nodejs "NodeJS"}

    stages {
      stage('Deploy App to Staging') {
        steps {
          sshPublisher(
            publishers: [
              sshPublisherDesc(
              configName: 'staging', transfers: [
                sshTransfer(
                  cleanRemote: false, 
                  excludes: 'node_modules/,.scannerwork/css-bundle/node-modules/',
                  //execCommand: 'echo "Replace me by your build/install scripts"', 
                  execCommand: '''
                                cd todoapp/app
                                npm install
                                pm2 delete app 2> /dev/null
                                pm2 start -f app.js
                                ''', 
                  execTimeout: 120000, 
                  flatten: false, 
                  makeEmptyDirs: false, 
                  noDefaultExcludes: false, 
                  patternSeparator: '[, ]+', 
                  remoteDirectory: 'todoapp', 
                  remoteDirectorySDF: false, 
                  removePrefix: '', 
                  sourceFiles: '**/*')], 
          usePromotionTimestamp: false, 
          useWorkspaceInPromotion: false, 
          verbose: true)])
        }
      }

      stage('Run Tests') {
        parallel {
          stage('Run Automated Tests') {
            steps {
              dir('cypresstests'){
                //sh 'ls'
                sh 'npm prune'
                sh 'npm cache clean --force'
                sh 'npm i'
                // sh 'npm install --save-dev mochawesome mochawesome-merge mochawesome-report-generator'
                // sh 'rm -f mochawesome.json'
                sh 'npm run jenkinstest' // --reporter mochawesome missing in cypress package.json
                // sh 'npx mochawesome-merge cypress/results/*.json -o mochawesome-report/mochawesome.json'
                // sh 'npx marge mochawesome-report/mochawesome.json'
              }
            }
            // post {
            //   success {
            //     publishHTML (
            //       target : [
            //         allowMissing: false,
            //         alwaysLinkToLastBuild: true,
            //         keepAll: true,
            //         reportDir: 'mochawesome-report',
            //         reportFiles: 'mochawesome.html',
            //         reportName: 'My Reports',
            //         reportTitles: 'The Report'
            //       ]
            //     )
            //   }
            // }
          }
          
          stage('Static Analysis') {
            environment {
              SCANNER_HOME = tool 'SonarScanner'
            }
            steps {
              sh "$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectBaseDir='/var/lib/jenkins/workspace/TodoApp Pipeline/app'"
            }
          }
        }
      }
      
      stage('Perform manual testing') {
        steps {
          timeout(activity: true, time: 5) {
            input 'Proceed to production?'
          }
        }
      }
      
      stage('Release to Production') {
        steps {
          sshPublisher(
            publishers: [
              sshPublisherDesc(
              configName: 'production', transfers: [
                sshTransfer(
                  cleanRemote: false, 
                  excludes: '', 
                  execCommand: '''
                                cd todoapp/app
                                npm install
                                pm2 delete app 2> /dev/null
                                pm2 start -f app.js
                                ''', 
                  execTimeout: 120000, 
                  flatten: false, 
                  makeEmptyDirs: false, 
                  noDefaultExcludes: false, 
                  patternSeparator: '[, ]+', 
                  remoteDirectory: 'todoapp', 
                  remoteDirectorySDF: false, 
                  removePrefix: '', 
                  sourceFiles: 'app/*')], 
          usePromotionTimestamp: false, 
          useWorkspaceInPromotion: false, 
          verbose: true)])
        }
      }
    }
    
}